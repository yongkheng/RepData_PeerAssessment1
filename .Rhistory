source('~/.active-rstudio-document', echo=TRUE)
```
colClasses=c('integer','character','integer'),
data <- read.table(unz("activity.zip", "activity.csv"),
colClasses=c('integer','character','integer'),
header=T, quote="\"", sep=",")
data
head(data)
strptime(data$date, "%d/%m/%Y")
as.Date(data$date, "%d/%m/%Y")
as.Date(data$date, "%Y-%m-%d")
data[,date]<-as.Date(data$date, "%Y-%m-%d")
data[, 'date'']<-as.Date(data$date, "%Y-%m-%d")
''
data[, 'date']<-as.Date(data$date, "%Y-%m-%d")
data
head(data)
data <- read.table(unz("activity.zip", "activity.csv"),
colClasses=c('integer','factor','integer'),
header=T, quote="\"", sep=",")
library(dplyr)
dt = tbl_df(data)
dt <- tbl_df(data)
group_by(dt, dt$date)
group_by(dt, date)
summarize(dt)
gdt<-group_by(dt, date)
summarize(gdt)
gdt
mean(gdt, interval)
mean(interval)
mean(gdt)
mean(gdt$interval)
gdt
summarise(gdt, mean(interval))
summarise(gdt, mean(steps))
summarise(complete.cases(gdt), mean(steps))
summarise(complete.cases(gdt), mean(steps, na.rm=T))
summarise(gdt, mean(steps, na.rm=T))
summarise(gdt, mean(steps, na.rm=True))
summarise(gdt, mean(steps, na.rm=TRUE))
summarise(gdt, mean(steps, na.rm=TRUE))
summarise(gdt, mean(steps))
data <- read.table(unz("activity.zip", "activity.csv"),
colClasses=c('integer','character','integer'),
header=T, quote="\"", sep=",")
data[,'date] <- as.Date(data$date,"%Y-%m-%d")
''
'
data <- read.table(unz("activity.zip", "activity.csv"),
colClasses=c('integer','character','integer'),
header=T, quote="\"", sep=",")
data[,'date'] <- as.Date(data$date,"%Y-%m-%d")
dt <- tbl_df(data)
```{r}
library(dplyr)
data <- read.table(unz("activity.zip", "activity.csv"),
colClasses=c('integer','character','integer'),
header=T, quote="\"", sep=",")
data[,'date'] <- as.Date(data$date,"%Y-%m-%d")
dt <- tbl_df(data)
rm('data')
dt
by_day <- group_by(dt, date)
rm('gdt')
total_steps <- summarise(by_day, mean(steps, na.rm=TRUE))
library(ggplot2)
qplot(total_steps)
hist(total_steps)
total_steps
hist(total_steps)
total_steps <- summarise(by_day, means=mean(steps, na.rm=TRUE))
hist(total_steps$means)
quantile(total_steps$means)
quantile(total_steps$means, na.rm=TRUE)
total_steps <- summarise(by_day, means=mean(steps, na.rm=TRUE))
total_steps <- summarise(by_day, means=mean(steps, na.rm=TRUE))
total_steps
total_steps <- summarise(by_day, sums=sum(steps, na.rm=TRUE))
total_steps
mean(total_steps)
mean(total_steps$sums)
median(total_steps$sums)
library(dplyr)
data <- read.table(unz("activity.zip", "activity.csv"),
colClasses=c('integer','character','integer'),
header=T, quote="\"", sep=",")
data[,'date'] <- as.Date(data$date,"%Y-%m-%d")
library(dplyr)
data <- read.table(unz("activity.zip", "activity.csv"),
colClasses=c('integer','character','integer'),
header=T, quote="\"", sep=",")
data[,'date'] <- as.Date(data$date,"%Y-%m-%d")
dt <- tbl_df( complete.cases(data) )
complete.cases(data)
data[complete.cases(data), ]
dt <- tbl_df( data[complete.cases(data), ] )
by_day <- group_by(dt, date)
total_steps <- summarise(by_day, sums=sum(steps, na.rm=TRUE))
total_steps$sums
mean(total_steps$sums)
by_day
total_steps
mean(total_steps$sums)
by_interval <-group_by(dt, interval)
by_interval
summarise(by_interval)
summarise(by_interval, mean(steps))
by_interval <- summarise(by_interval, mean(steps))
with(by_interval, plot())
by_interval <- summarise(by_interval, means=mean(steps))
with(by_interval, plot(means,interval))
by_interval <- summarise(by_interval, means=mean(steps))
by_interval <-group_by(dt, interval)
total_steps <- summarise(by_interval, means=mean(steps))
with(total_steps, plot(means,interval))
with(total_steps, plot(means,interval), type='l')
with(total_steps, plot(means,interval), type='l')
with(total_steps, plot(means,interval, type='l'))
with(total_steps, plot(interval, means, type='l'))
by_interval <-group_by(dt, interval)
total_steps <- summarise(by_interval, means=mean(steps))
with(total_steps, plot(interval, means, type='l'))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
tail(total_steps)
2400/60
2400/24
2400/24/5
total_steps
max(total_steps)
max(total_steps$means)
which.max(total_steps$means)
total_steps[which.max(total_steps$means)]
total_steps[which.max(total_steps$means),]
print(max_steps)
max_steps<-total_steps[which.max(total_steps$means),]
print(max_steps)
data
is.na(data)
sum(is.na(data))
source('~/.active-rstudio-document', echo=TRUE)
data[is.na(data),]
data_in <- data
library(vim)
library(vVIM)
library(VIM)
library(scales)
library(Hmisc)
library(mitools)
library(mi)
install.packages('Hmisc')
library(Hmisc)
imputed_data <- data
impute(data$steps, fun=mean)
impute(data$steps, fun=mean)
class(data$interval)
class(data$interval)<-'factor'
class(data$interval)
class(data$interval)<-'integer'
class(data$interval)
data$interval <- factor(data$interval)
class(data$interval)
by_day
impute(by_day$steps, fun=mean)
ls
data
data$interval
class(data$interval)
tapply(X=data$steps, INDEX=data$interval, FUN=mean, na.rm=True)
tapply(X=data$steps, INDEX=data$interval, FUN=mean, na.rm=TRUE)
ceiling(tapply(X=data$steps, INDEX=data$interval, FUN=mean, na.rm=TRUE))
tapply(X=data$steps, INDEX=data$interval, FUN=mean, na.rm=True)
ceiling(tapply(X=data$steps, INDEX=data$interval, FUN=mean, na.rm=TRUE))
tapply(X=data$steps, INDEX=data$interval, FUN=mean, na.rm=TRUE)
tapply(X=data$steps, INDEX=data$date, FUN=mean, na.rm=TRUE)
tapply(X=data$steps, INDEX=data$interval, FUN=mean, na.rm=TRUE)
length(tapply(X=data$steps, INDEX=data$interval, FUN=mean, na.rm=TRUE))
View(max_steps)
data
is.na(data)
sum(is.na(data))
data[is.na(data)]
data[is.na(data),]
length(data[is.na(data),])
dim(data[is.na(data),])
na_data <- data[is.na(data),]
na_data
na_data
split(data, data$interval)
grouped_data<-split(data, data$interval)
class(grouped_data)
grouped_data['1']
grouped_data[1]
head(grouped_data[1])
names(grouped_data)
l<-grouped_data[1]
l
is.na(l)
l<-grouped_data[1,]
l<-grouped_data[1]
class(l)
complete.cases(l)
l==NA
data
total_steps
total_steps
total_steps[interval==0]
total_steps[total_steps$interval==0]
total_steps[0]
total_steps['0']
total_steps['10']
total_steps[factor('10')]
total_steps
total_steps[1]
total_steps[,1]
total_steps[1,]
total_steps$interval == 10
total_steps[total_steps$interval == 10,]
total_steps[total_steps$interval == 10,]$means
total_steps[total_steps$interval == 10,]$means
fn <- function(x)P
fn <- function(x){}
fn <- function(x){
total_steps[total_steps$interval == x,]$means}
fn(10)
total_steps
nas
nas <- is.na(data)
nas
nas <- data[is.na(data),]
nas
total_steps
nas <- tbl_df(data[is.na(data),])
nas
dt <- tbl_df(data)
is.na(dt)
dt[is.na(dt),]
nas<-dt[is.na(dt),]
lapply(nas$steps, nas$interval, fn)
vapply(nas$steps, nas$interval, fn)
lapply(nas$steps, fn)
class(nas$steps)
fn
p <= nas$steps
p <- nas$steps
p
p <- nas$interval
p
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
nas
nas[1]
nas[2]
nas
nas[3]
nas[3][1]
nas$interval[1]
fn(nas$interval[1])
total_steps
lapply(nas$interval, fn)
p<-lapply(nas$interval, fn)
integer(p)
sapply(nas$interval, fn)
p<-sapply(nas$interval, fn)
class(p)
nas$steps <- p
nas
dt
dt[is.na(dt)]<- p
dt
fn            <- function(x){total_steps[total_steps$interval == x,]$means}
filled_dt     <- tbl_df(data)
nas           <- filled_dt[is.na(filled_dt),]
p             <- sapply(nas$interval, fn)
filled_dt[is.na(filled_dt)] <- p
filled_dt
dim(filled_dt)
dim(data)
sum(complete.cases(filled_dt))
complete.cases(filled_dt)
is.na(filled_dt)
sum(is.na(filled_dt))
dt
library(lubridate)
source('~/.active-rstudio-document', echo=TRUE)
sapply(dt$date,weekdays)
library(timeDate)
install.packages('timeDate')
library(timeDate)
sapply(dt$date,isWeekend)
class(dt$date)
p<-sapply(dt$date,isWeekend)
p
dt[, isWeekend]<-sapply(dt$date,isWeekend)
dt[, isWeekend]<-lapply(dt$date,isWeekend)
dt
head(dt)
sapply(dt$date,weekdays)
dt[, weekdays]<-sapply(dt$date,weekdays)
class(sapply(dt$date,weekdays))
class(lapply(dt$date,weekdays))
dt[, weekdays]<-lapply(dt$date,weekdays)
dt$weekdays<-as.factor(sapply(dt$date,weekdays))
dt
dt$weekdays
source('~/.active-rstudio-document', echo=TRUE)
levels(dt$weekdays)
dt$isWeekend<-as.factor(sapply(dt$date,isWeekend))
dt
by_interval <- group_by(dt, (interval, isWeekend))
by_interval <- group_by(dt, interval, isWeekend)
by_interval
summarize(by_interval)
summarize(by_interval, means=mean(steps))
summarize(by_interval, means=mean(steps, by=isWeekend))
summarize(by_interval, means=mean(steps), by=isWeekend)
summarize(by_interval[by_interval$isWeekend==FALSE], means=mean(steps))
summarize(by_interval, means=mean(steps), by=group)
filter(by_interval, isWeekend==FALSE)
filter(by_interval, isWeekend==FALSE) %>% summarize(means=mean(steps))
source('~/.active-rstudio-document', echo=TRUE)
filter(by_interval, isWeekend==FALSE) %>% summarize(means=mean(steps))
filter(by_interval, isWeekend==FALSE)
dt
filter(by_interval, isWeekend==FALSE)
filter(dt, isWeekend==FALSE)
filter(dt, isWeekend==FALSE) %>% summarize(means=mean(steps))
dt_weekend<-filter(dt, isWeekend==FALSE)
filter(dt, isWeekend==FALSE) %>% group_by(interval) %>% summarize(means=mean(steps))
filter(dt, isWeekend==FALSE) %>% group_by(interval)
filter(dt, isWeekend==FALSE) %>% group_by(interval) %>% summarize(mean(steps))
p<-filter(dt, isWeekend==FALSE) %>% group_by(interval)
summarise(p, means=mean(steps))
library(timeDate)
dt$isWeekend <- as.factor(sapply(dt$date, isWeekend))
dt_Weekend<-filter(dt, isWeekend==FALSE) %>% group_by(interval)
total_steps <- summarize(dt_Weekend, means=mean(steps))
with(total_steps,
plot(interval, means, type='l',
main='Pattern of daily average steps taken in every 5-minute intervals',
xlab ='5-minute intervals',
ylab = 'Average no. of steps in 5-minute interval'))
total_steps
dt$isWeekend <- as.factor(sapply(dt$date, isWeekend))
dt_Weekend<-filter(dt, isWeekend==FALSE) %>% group_by(interval)
total_steps <- summarize(dt_Weekend, means=mean(steps))
dt_Weekend
total_steps <- summarize(dt_Weekend, means=mean(steps))
dt_Weekend<-filter(dt, isWeekend==FALSE)
dt_Weekend
group_by(dt_Weekend, interval)
dt_Weekend
dt_Weekend<-group_by(dt_Weekend, interval)
dt_Weekend
total_steps(dt_Weekend, mean(steps))
summarise(dt_Weekend, mean(steps))
dt_Weekend<-filter(dt, isWeekend==FALSE) %>% group_by(interval)
total_steps <- summarize(dt_Weekend, means=mean(steps))
total_steps <- summarize(dt_Weekend, mean(steps))
dt_Weekend
summarize(dt_Weekend, mean(steps))
summarize(dt_Weekend, mean(steps)
)
dt_Weekend
summarise(dt_Weekend, mean(steps))
summarize(dt_Weekend, mean(steps))
summarise(dt_Weekend, mean(steps))
dt_Weekend<-filter(dt, isWeekend==FALSE) %>% group_by(interval)
total_steps <- summarise(dt_Weekend, means=mean(steps))
with(total_steps,
)
library(timeDate)
dt$isWeekend <- as.factor(sapply(dt$date, isWeekend))
dt_Weekend<-filter(dt, isWeekend==FALSE) %>% group_by(interval)
total_steps <- summarise(dt_Weekend, means=mean(steps))
with(total_steps,
plot(interval, means, type='l',
main='Pattern of daily average steps taken in every 5-minute intervals',
xlab ='5-minute intervals',
ylab = 'Average no. of steps in 5-minute interval'))
dt_Weekend<-filter(dt, isWeekend==FALSE)
dt_Weekend<-filter(dt, isWeekend==FALSE) %>% group_by(interval)
dt_Weekend<-filter(dt, isWeekend==FALSE) %>% group_by(interval) %>% summarise(means=mean(steps))
dt_Weekend
library(timeDate)
dt$isWeekend <- as.factor(sapply(dt$date, isWeekend))
dt_Weekend <-filter(dt, isWeekend==FALSE) %>%
group_by(interval) %>%
summarise(means=mean(steps))
with(dt_Weekend,
plot(interval, means, type='l',
main='Pattern of daily average steps taken in every 5-minute intervals',
xlab ='5-minute intervals',
ylab = 'Average no. of steps in 5-minute interval'))
